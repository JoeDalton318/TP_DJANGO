# users/profile_logic.py

"""
Logique m√©tier diff√©renci√©e selon les types de profils utilisateurs

TOURIST (Touriste):
- Objectif: D√©couvrir les attractions populaires
- Acc√®s: Attractions touristiques, monuments, restaurants populaires
- Limite compilation: 30 attractions
- Recommandations: Bas√©es sur la popularit√© et les avis
- Filtres sugg√©r√©s: Prix mod√©r√©, attractions familiales

LOCAL (Habitant local):
- Objectif: D√©couvrir des lieux authentiques et moins connus
- Acc√®s: Toutes attractions + spots cach√©s + √©v√©nements locaux
- Limite compilation: 50 attractions
- Recommandations: Lieux authentiques, restaurants locaux, √©v√©nements
- Filtres sugg√©r√©s: Nouveaut√©s, moins touristiques

PROFESSIONAL (Guide/Professionnel du tourisme):
- Objectif: Cr√©er des itin√©raires complets pour clients
- Acc√®s: Toutes attractions + outils avanc√©s
- Limite compilation: 100 attractions (pour cr√©er des circuits)
- Recommandations: Diversifi√©es, informations d√©taill√©es
- Outils suppl√©mentaires: Export PDF, calcul d'itin√©raires optimis√©s
- Filtres sugg√©r√©s: Par type de client√®le, dur√©e de visite

Cette diff√©renciation permet:
1. Une exp√©rience personnalis√©e selon les besoins
2. Une mon√©tisation potentielle (Professional = compte premium)
3. Une meilleure UX avec des recommandations adapt√©es
"""

def get_compilation_limit(profile_type):
    """Retourne la limite d'attractions selon le type de profil"""
    limits = {
        'tourist': 30,
        'local': 50,
        'professional': 100,
    }
    return limits.get(profile_type, 30)

def get_recommended_categories(profile_type):
    """Retourne les cat√©gories recommand√©es selon le profil"""
    recommendations = {
        'tourist': [
            'attractions', 'restaurants', 'hotels', 
            'museums', 'monuments', 'activities'
        ],
        'local': [
            'restaurants', 'nightlife', 'activities',
            'shopping', 'entertainment', 'events'
        ],
        'professional': [
            'all'  # Acc√®s √† toutes les cat√©gories
        ],
    }
    return recommendations.get(profile_type, recommendations['tourist'])

def get_search_suggestions(profile_type, country):
    """Retourne des suggestions de recherche selon le profil"""
    if profile_type == 'tourist':
        return [
            f"Top attractions in {country}",
            f"Best restaurants {country}",
            f"Family activities {country}",
            f"Things to do {country}"
        ]
    elif profile_type == 'local':
        return [
            f"Hidden gems {country}",
            f"Local restaurants {country}",
            f"New places {country}",
            f"Events {country}"
        ]
    else:  # professional
        return [
            f"Complete guide {country}",
            f"Tourist circuits {country}",
            f"All attractions {country}",
            f"Professional itineraries {country}"
        ]

def can_access_feature(profile_type, feature_name):
    """V√©rifie si un profil peut acc√©der √† une fonctionnalit√©"""
    features_access = {
        'export_pdf': ['professional'],
        'advanced_itinerary': ['professional'],
        'batch_operations': ['professional', 'local'],
        'standard_compilation': ['tourist', 'local', 'professional'],
        'map_view': ['tourist', 'local', 'professional'],
        'reviews': ['tourist', 'local', 'professional'],
    }
    
    allowed_profiles = features_access.get(feature_name, [])
    return profile_type in allowed_profiles

def get_profile_badge_info(profile_type):
    """Retourne les informations du badge de profil"""
    badges = {
        'tourist': {
            'icon': 'üéí',
            'color': 'primary',
            'label': 'Voyageur',
            'description': 'D√©couvrez les meilleures attractions'
        },
        'local': {
            'icon': 'üè°',
            'color': 'success',
            'label': 'Local',
            'description': 'Explorez des lieux authentiques'
        },
        'professional': {
            'icon': 'üíº',
            'color': 'warning',
            'label': 'Professionnel',
            'description': 'Outils avanc√©s pour cr√©er des circuits'
        },
    }
    return badges.get(profile_type, badges['tourist'])
